{"remainingRequest":"E:\\SpringBoot+Vue校园论坛(微博)系统\\项目源码\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\SpringBoot+Vue校园论坛(微博)系统\\项目源码\\client\\src\\views\\system\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\SpringBoot+Vue校园论坛(微博)系统\\项目源码\\client\\src\\views\\system\\role\\index.vue","mtime":1692251552000},{"path":"E:\\SpringBoot+Vue校园论坛(微博)系统\\项目源码\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1718722932706},{"path":"E:\\SpringBoot+Vue校园论坛(微博)系统\\项目源码\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1718722933082},{"path":"E:\\SpringBoot+Vue校园论坛(微博)系统\\项目源码\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1718722932706},{"path":"E:\\SpringBoot+Vue校园论坛(微博)系统\\项目源码\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1718722926770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"index.vue","sourceRoot":"src/views/system/role","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form\n      :model=\"queryParams\"\n      ref=\"queryForm\"\n      size=\"small\"\n      :inline=\"true\"\n      v-show=\"showSearch\"\n    >\n      <el-form-item label=\"角色名称\" prop=\"roleName\">\n        <el-input\n          v-model=\"queryParams.roleName\"\n          placeholder=\"请输入角色名称\"\n          clearable\n          style=\"width: 240px\"\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"权限字符\" prop=\"roleKey\">\n        <el-input\n          v-model=\"queryParams.roleKey\"\n          placeholder=\"请输入权限字符\"\n          clearable\n          style=\"width: 240px\"\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"状态\" prop=\"status\">\n        <el-select\n          v-model=\"queryParams.status\"\n          placeholder=\"角色状态\"\n          clearable\n          style=\"width: 240px\"\n        >\n          <el-option\n            v-for=\"dict in dict.type.sys_normal_disable\"\n            :key=\"dict.value\"\n            :label=\"dict.label\"\n            :value=\"dict.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"创建时间\">\n        <el-date-picker\n          v-model=\"dateRange\"\n          style=\"width: 240px\"\n          value-format=\"yyyy-MM-dd\"\n          type=\"daterange\"\n          range-separator=\"-\"\n          start-placeholder=\"开始日期\"\n          end-placeholder=\"结束日期\"\n        ></el-date-picker>\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-search\"\n          size=\"mini\"\n          @click=\"handleQuery\"\n          >搜索</el-button\n        >\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\"\n          >重置</el-button\n        >\n      </el-form-item>\n    </el-form>\n\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"primary\"\n          plain\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleAdd\"\n          v-hasPermi=\"['system:role:add']\"\n          >新增</el-button\n        >\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"success\"\n          plain\n          icon=\"el-icon-edit\"\n          size=\"mini\"\n          :disabled=\"single\"\n          @click=\"handleUpdate\"\n          v-hasPermi=\"['system:role:edit']\"\n          >修改</el-button\n        >\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"danger\"\n          plain\n          icon=\"el-icon-delete\"\n          size=\"mini\"\n          :disabled=\"multiple\"\n          @click=\"handleDelete\"\n          v-hasPermi=\"['system:role:remove']\"\n          >删除</el-button\n        >\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"warning\"\n          plain\n          icon=\"el-icon-download\"\n          size=\"mini\"\n          @click=\"handleExport\"\n          v-hasPermi=\"['system:role:export']\"\n          >导出</el-button\n        >\n      </el-col>\n      <right-toolbar\n        :showSearch.sync=\"showSearch\"\n        @queryTable=\"getList\"\n      ></right-toolbar>\n    </el-row>\n\n    <el-table\n      v-loading=\"loading\"\n      :data=\"roleList\"\n      @selection-change=\"handleSelectionChange\"\n    >\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column label=\"角色编号\" prop=\"roleId\" width=\"120\" />\n      <el-table-column\n        label=\"角色名称\"\n        prop=\"roleName\"\n        :show-overflow-tooltip=\"true\"\n        width=\"150\"\n      />\n      <el-table-column\n        label=\"权限字符\"\n        prop=\"roleKey\"\n        :show-overflow-tooltip=\"true\"\n        width=\"150\"\n      />\n      <el-table-column label=\"显示顺序\" prop=\"roleSort\" width=\"100\" />\n      <el-table-column label=\"状态\" align=\"center\" width=\"100\">\n        <template slot-scope=\"scope\">\n          <el-switch\n            v-model=\"scope.row.status\"\n            active-value=\"0\"\n            inactive-value=\"1\"\n            @change=\"handleStatusChange(scope.row)\"\n          ></el-switch>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"创建时间\"\n        align=\"center\"\n        prop=\"createTime\"\n        width=\"180\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ parseTime(scope.row.createTime) }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"操作\"\n        align=\"center\"\n        class-name=\"small-padding fixed-width\"\n      >\n        <template slot-scope=\"scope\" v-if=\"scope.row.roleId != 1\">\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-edit\"\n            @click=\"handleUpdate(scope.row)\"\n            v-hasPermi=\"['system:role:edit']\"\n            >修改</el-button\n          >\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-delete\"\n            @click=\"handleDelete(scope.row)\"\n            v-hasPermi=\"['system:role:remove']\"\n            >删除</el-button\n          >\n          <el-dropdown\n            size=\"mini\"\n            @command=\"(command) => handleCommand(command, scope.row)\"\n            v-hasPermi=\"['system:role:edit']\"\n          >\n            <span class=\"el-dropdown-link\">\n              <i class=\"el-icon-d-arrow-right el-icon--right\"></i>更多\n            </span>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item\n                command=\"handleAuthApi\"\n                icon=\"el-icon-circle-check\"\n                v-hasPermi=\"['system:role:edit']\"\n                >分配接口</el-dropdown-item\n              >\n              <el-dropdown-item\n                command=\"handleAuthUser\"\n                icon=\"el-icon-user\"\n                v-hasPermi=\"['system:role:edit']\"\n                >分配用户</el-dropdown-item\n              >\n            </el-dropdown-menu>\n          </el-dropdown>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total > 0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 添加或修改角色配置对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"form.roleName\" placeholder=\"请输入角色名称\" />\n        </el-form-item>\n        <el-form-item prop=\"roleKey\">\n          <span slot=\"label\">\n            <el-tooltip\n              content=\"控制器中定义的权限字符，如：@PreAuthorize(`@ss.hasRole('admin')`)\"\n              placement=\"top\"\n            >\n              <i class=\"el-icon-question\"></i>\n            </el-tooltip>\n            权限字符\n          </span>\n          <el-input v-model=\"form.roleKey\" placeholder=\"请输入权限字符\" />\n        </el-form-item>\n        <el-form-item label=\"角色顺序\" prop=\"roleSort\">\n          <el-input-number\n            v-model=\"form.roleSort\"\n            controls-position=\"right\"\n            :min=\"0\"\n          />\n        </el-form-item>\n        <el-form-item label=\"状态\">\n          <el-radio-group v-model=\"form.status\">\n            <el-radio\n              v-for=\"dict in dict.type.sys_normal_disable\"\n              :key=\"dict.value\"\n              :label=\"dict.value\"\n              >{{ dict.label }}</el-radio\n            >\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"菜单权限\">\n          <el-checkbox\n            v-model=\"menuExpand\"\n            @change=\"handleCheckedTreeExpand($event, 'menu')\"\n            >展开/折叠</el-checkbox\n          >\n          <el-checkbox\n            v-model=\"menuNodeAll\"\n            @change=\"handleCheckedTreeNodeAll($event, 'menu')\"\n            >全选/全不选</el-checkbox\n          >\n          <el-checkbox\n            v-model=\"form.menuCheckStrictly\"\n            @change=\"handleCheckedTreeConnect($event, 'menu')\"\n            >父子联动</el-checkbox\n          >\n          <el-tree\n            class=\"tree-border\"\n            :data=\"menuOptions\"\n            show-checkbox\n            ref=\"menu\"\n            node-key=\"id\"\n            :check-strictly=\"!form.menuCheckStrictly\"\n            empty-text=\"加载中，请稍候\"\n            :props=\"defaultProps\"\n          ></el-tree>\n        </el-form-item>\n        <el-form-item label=\"备注\">\n          <el-input\n            v-model=\"form.remark\"\n            type=\"textarea\"\n            placeholder=\"请输入内容\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog\n      title=\"分配接口\"\n      :visible.sync=\"openAuthApi\"\n      width=\"500px\"\n      append-to-body\n    >\n      <el-form ref=\"form2\" label-width=\"100px\">\n        <el-form-item label=\"菜单权限\">\n          <el-checkbox\n            v-model=\"resourceExpand\"\n            @change=\"handleCheckedTreeExpand($event, 'resource')\"\n            >展开/折叠</el-checkbox\n          >\n          <el-checkbox\n            v-model=\"resourceNodeAll\"\n            @change=\"handleCheckedTreeNodeAll($event, 'resource')\"\n            >全选/全不选</el-checkbox\n          >\n          <el-checkbox\n            v-model=\"form.resourceCheckStrictly\"\n            @change=\"handleCheckedTreeConnect($event, 'resource')\"\n            >父子联动</el-checkbox\n          >\n          <el-tree\n            class=\"tree-border\"\n            :data=\"resourceOptions\"\n            show-checkbox\n            ref=\"resource\"\n            node-key=\"id\"\n            :check-strictly=\"!form.resourceCheckStrictly\"\n            empty-text=\"加载中，请稍候\"\n            :props=\"defaultProps\"\n          ></el-tree>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitApiResource\">确 定</el-button>\n        <el-button @click=\"cancelApiResource\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  listRole,\n  getRole,\n  delRole,\n  addRole,\n  updateRole,\n  dataScope,\n  changeRoleStatus,\n} from \"@/api/system/role\";\nimport {\n  treeselect as menuTreeselect,\n  roleMenuTreeselect,\n} from \"@/api/system/menu\";\nimport {\n  roleResourceTreeselect,\n  editRoleResource,\n} from \"@/api/system/resource\";\n\nexport default {\n  name: \"Role\",\n  dicts: [\"sys_normal_disable\"],\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 角色表格数据\n      roleList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      //是否显示弹出层(分配接口)\n      openAuthApi: false,\n      menuExpand: false,\n      menuNodeAll: false,\n      resourceExpand: true,\n      resourceNodeAll: false,\n      // 日期范围\n      dateRange: [],\n      // 菜单列表\n      menuOptions: [],\n      // 资源列表\n      resourceOptions: [],\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        roleName: undefined,\n        roleKey: undefined,\n        status: undefined,\n      },\n      // 表单参数\n      form: {},\n      defaultProps: {\n        children: \"children\",\n        label: \"label\",\n      },\n      // 表单校验\n      rules: {\n        roleName: [\n          { required: true, message: \"角色名称不能为空\", trigger: \"blur\" },\n        ],\n        roleKey: [\n          { required: true, message: \"权限字符不能为空\", trigger: \"blur\" },\n        ],\n        roleSort: [\n          { required: true, message: \"角色顺序不能为空\", trigger: \"blur\" },\n        ],\n      },\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    /** 查询角色列表 */\n    getList() {\n      this.loading = true;\n      listRole(this.addDateRange(this.queryParams, this.dateRange)).then(\n        (response) => {\n          this.roleList = response.rows;\n          this.total = response.total;\n          this.loading = false;\n        }\n      );\n    },\n    /** 查询菜单树结构 */\n    getMenuTreeselect() {\n      menuTreeselect().then((response) => {\n        this.menuOptions = response.data;\n      });\n    },\n    // 所有菜单节点数据\n    getMenuAllCheckedKeys() {\n      // 目前被选中的菜单节点\n      let checkedKeys = this.$refs.menu.getCheckedKeys();\n      // 半选中的菜单节点\n      let halfCheckedKeys = this.$refs.menu.getHalfCheckedKeys();\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\n      return checkedKeys;\n    },\n    // 所有api节点数据\n    getResourceAllCheckedKeys() {\n      // 目前被选中的api节点 仅返回被选中的叶子节点的 keys\n      let checkedKeys = this.$refs.resource.getCheckedKeys(true);\n\n      return checkedKeys;\n    },\n    /** 根据角色ID查询菜单树结构 */\n    getRoleMenuTreeselect(roleId) {\n      return roleMenuTreeselect(roleId).then((response) => {\n        this.menuOptions = response.menus;\n        return response;\n      });\n    },\n    /** 根据角色ID查询api资源树结构 */\n    getRoleResourceTreeselect(roleId) {\n      return roleResourceTreeselect(roleId).then((response) => {\n        this.resourceOptions = response.resources;\n        return response;\n      });\n    },\n    // 角色状态修改\n    handleStatusChange(row) {\n      let text = row.status === \"0\" ? \"启用\" : \"停用\";\n      this.$modal\n        .confirm('确认要\"' + text + '\"\"' + row.roleName + '\"角色吗？')\n        .then(function () {\n          return changeRoleStatus(row.roleId, row.status);\n        })\n        .then(() => {\n          this.$modal.msgSuccess(text + \"成功\");\n        })\n        .catch(function () {\n          row.status = row.status === \"0\" ? \"1\" : \"0\";\n        });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 取消按钮（分配接口）\n    cancelApiResource() {\n      this.openAuthApi = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      if (this.$refs.menu != undefined) {\n        this.$refs.menu.setCheckedKeys([]);\n      }\n      (this.menuExpand = false),\n        (this.menuNodeAll = false),\n        (this.resourceExpand = true),\n        (this.resourceNodeAll = false),\n        (this.form = {\n          roleId: undefined,\n          roleName: undefined,\n          roleKey: undefined,\n          roleSort: 0,\n          status: \"0\",\n          menuIds: [],\n          resourceIds: [],\n          menuCheckStrictly: true,\n          resourceCheckStrictly: true,\n          remark: undefined,\n        });\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = [];\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map((item) => item.roleId);\n      this.single = selection.length != 1;\n      this.multiple = !selection.length;\n    },\n    // 更多操作触发\n    handleCommand(command, row) {\n      switch (command) {\n        case \"handleAuthApi\":\n          this.handleAuthApi(row);\n          break;\n        case \"handleAuthUser\":\n          this.handleAuthUser(row);\n          break;\n        default:\n          break;\n      }\n    },\n    // 树权限（展开/折叠）\n    handleCheckedTreeExpand(value, type) {\n      if (type == \"menu\") {\n        let treeList = this.menuOptions;\n        for (let i = 0; i < treeList.length; i++) {\n          this.$refs.menu.store.nodesMap[treeList[i].id].expanded = value;\n        }\n      } else if (type == \"resource\") {\n        let treeList = this.resourceOptions;\n        for (let i = 0; i < treeList.length; i++) {\n          this.$refs.resource.store.nodesMap[treeList[i].id].expanded = value;\n        }\n      }\n    },\n    // 树权限（全选/全不选）\n    handleCheckedTreeNodeAll(value, type) {\n      if (type == \"menu\") {\n        this.$refs.menu.setCheckedNodes(value ? this.menuOptions : []);\n      } else if (type == \"resource\") {\n        this.$refs.resource.setCheckedNodes(value ? this.resourceOptions : []);\n      }\n    },\n    // 树权限（父子联动）\n    handleCheckedTreeConnect(value, type) {\n      if (type == \"menu\") {\n        this.form.menuCheckStrictly = value ? true : false;\n      } else if (type == \"resource\") {\n        this.form.resourceCheckStrictly = value ? true : false;\n      }\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.getMenuTreeselect();\n      this.open = true;\n      this.title = \"添加角色\";\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const roleId = row.roleId || this.ids;\n      const roleMenu = this.getRoleMenuTreeselect(roleId);\n      getRole(roleId).then((response) => {\n        this.form = response.data;\n        this.open = true;\n        this.$nextTick(() => {\n          roleMenu.then((res) => {\n            let checkedKeys = res.checkedKeys;\n            checkedKeys.forEach((v) => {\n              this.$nextTick(() => {\n                this.$refs.menu.setChecked(v, true, false);\n              });\n            });\n          });\n        });\n        this.title = \"修改角色\";\n      });\n    },\n    /** 分配接口 */\n    handleAuthApi(row) {\n      this.reset();\n      const roleId = row.roleId || this.ids;\n      this.form.roleId = roleId;\n      const roleResource = this.getRoleResourceTreeselect(roleId);\n      this.openAuthApi = true;\n      this.$nextTick(() => {\n        roleResource.then((res) => {\n          let checkedKeys = res.checkedKeys;\n          checkedKeys.forEach((v) => {\n            this.$nextTick(() => {\n              this.$refs.resource.setChecked(v, true, false);\n            });\n          });\n        });\n      });\n      this.title = \"分配接口\";\n    },\n    /** 分配用户操作 */\n    handleAuthUser: function (row) {\n      const roleId = row.roleId;\n      this.$router.push(\"/system/role-auth/user/\" + roleId);\n    },\n    /** 提交按钮 */\n    submitForm: function () {\n      this.$refs[\"form\"].validate((valid) => {\n        if (valid) {\n          if (this.form.roleId != undefined) {\n            this.form.menuIds = this.getMenuAllCheckedKeys();\n            updateRole(this.form).then((response) => {\n              this.$modal.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getList();\n            });\n          } else {\n            this.form.menuIds = this.getMenuAllCheckedKeys();\n            addRole(this.form).then((response) => {\n              this.$modal.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getList();\n            });\n          }\n        }\n      });\n    },\n    /** 提交按钮（分配接口） */\n    submitApiResource: function () {\n      if (this.form.roleId != undefined) {\n        this.form.resourceIds = this.getResourceAllCheckedKeys();\n        let resourceIds = this.form.resourceIds.join(\",\");\n\n        editRoleResource({\n          roleId: this.form.roleId,\n          resourceIds: resourceIds,\n        }).then((response) => {\n          this.$modal.msgSuccess(\"修改成功\");\n           this.openAuthApi = false;\n        });\n        // console.log(this.form.resourceIds);\n      }\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const roleIds = row.roleId || this.ids;\n      this.$modal\n        .confirm('是否确认删除角色编号为\"' + roleIds + '\"的数据项？')\n        .then(function () {\n          return delRole(roleIds);\n        })\n        .then(() => {\n          this.getList();\n          this.$modal.msgSuccess(\"删除成功\");\n        })\n        .catch(() => {});\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      this.download(\n        \"system/role/export\",\n        {\n          ...this.queryParams,\n        },\n        `role_${new Date().getTime()}.xlsx`\n      );\n    },\n  },\n};\n</script>"]}]}